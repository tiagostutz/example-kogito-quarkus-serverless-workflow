{
  "id": "greeting",
  "version": "1.0",
  "specVersion": "0.8",
  "name": "Greeting workflow",
  "description": "JSON based greeting workflow",
  "start": "ChooseOnCountry",
  "functions": [
    {
      "name": "getGreetingFunction",
      "operation": "international_greeting.yml#getGreeting"
    },
    {
      "name": "getPriceFunction",
      "operation": "cost_living.yml#getPrices"
    },
    {
      "name": "exchangeCurrencyFunction",
      "operation": "currency_exchange.yml#exchangeCurrency"
    }
  ],
  "states": [
    {
      "name": "ChooseOnCountry",
      "type": "switch",
      "dataConditions": [
        {
          "condition": "${ .country == \"United States\" }",
          "transition": "GreetInEnglish"
        },
        {
          "condition": "${ .country == \"Spain\" }",
          "transition": "GreetInSpanish"
        },
        {
          "condition": "${ .country == \"Brazil\" }",
          "transition": "GreetInPortuguese"
        }
      ],
      "defaultCondition": {
        "transition": "GreetInEnglish"
      }
    },
    {
      "name": "GreetInEnglish",
      "type": "inject",
      "data": {
        "language": "English",
        "city": "New York"
      },
      "transition": "GetPricesForFood"
    },
    {
      "name": "GreetInSpanish",
      "type": "inject",
      "data": {
        "language": "Spanish",
        "city": "Barcelona"
      },
      "transition": "GetGreeting"
    },
    {
      "name": "GreetInPortuguese",
      "type": "inject",
      "data": {
        "language": "Portuguese",
        "city": "SÃ£o Paulo"
      },
      "transition": "GetGreeting"
    },
    {
      "name": "GetPricesForFood",
      "type": "operation",
      "actions": [
        {
          "name": "getPrices",
          "functionRef": {
            "refName": "getPriceFunction",
            "arguments": {
              "city_name": "${ .city }",
              "country_name": "${ .country }"
            }
          },
          "actionDataFilter": {
            "results": "${ {food_prices:[.prices[] | select(.category_id == 6 or .category_id == 4) ], state_code: .state_code} }"
          }
        }
      ],
      "transition": "AverageFoodPriceInLocalCurrency"
    },
    {
      "name": "AverageFoodPriceInLocalCurrency",
      "type": "foreach",
      "inputCollection": "${ .food_prices[] | select(.good_id == 25) }",
      "iterationParam": "fp",
      "outputCollection": "${ .food_prices_currency }",
      "actions": [
        {
          "name": "exchangeCurrency",
          "functionRef": {
            "refName": "exchangeCurrencyFunction",
            "arguments": {
              "from": "${ .fp.currency_code }",
              "to": "${ .reference_currency }",
              "q": "${ .fp.avg }"
            }
          }
        }
      ],
      "transition": "GetGreeting"
    },
    {
      "name": "GetGreeting",
      "type": "operation",
      "actions": [
        {
          "name": "getGreeting",
          "functionRef": {
            "refName": "getGreetingFunction",
            "arguments": {
              "name": "${ .name }",
              "language": "${ .language }"
            }
          },
          "actionDataFilter": {
            "results": "${ {greeting: .greeting} }"
          }
        }
      ],
      "end": true
    }
  ]
}